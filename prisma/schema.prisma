// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  username String
  family   String

  createDate DateTime

  //Relation fields
  tokens Token?

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @unique

  Favorite Favorite[]
}

model Token {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt()

  token      String
  expiration DateTime

  //Relation fields
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  user User?
}

model Books {
  id             Int      @id @default(autoincrement())
  name           String
  isbn           String   @unique
  release        DateTime
  circulation    Int //тираж
  description    String
  numberOfPages  Int
  ageRestriction Int

  //Relation fields

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  serias   Serias @relation(fields: [seriasId], references: [id])
  seriasId Int    @unique

  Favorite       Favorite[]
  Book_author    Book_author[]
  Book_publisher Book_publisher[]
}

model Publisher {
  id             Int              @id @default(autoincrement())
  name           String
  Book_publisher Book_publisher[]
}

model Author {
  id          Int           @id @default(autoincrement())
  fname       String
  sname       String
  lname       String
  pseudonym   String
  Book_author Book_author[]
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String
  books       Books[]
}

model Serias {
  id    Int     @id @default(autoincrement())
  name  String
  books Books[]
}

model Favorite {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  book   Books @relation(fields: [bookId], references: [id])
  bookId Int
}

model Book_author {
  id Int @id @default(autoincrement())

  book   Books @relation(fields: [bookId], references: [id])
  bookId Int

  author   Author @relation(fields: [authorId], references: [id])
  authorId Int
}

model Book_publisher {
  id Int @id @default(autoincrement())

  book   Books @relation(fields: [bookId], references: [id])
  bookId Int

  publisher   Publisher @relation(fields: [publisherId], references: [id])
  publisherId Int
}
